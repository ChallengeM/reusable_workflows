name: 'Build Android'
description: Build Android
inputs:
  keystore:
    description: 'Base64 encoded Keystore'
    required: true
  keyPassword:
    description: 'Key Password'
    required: true
  keyAlias:
    description: 'Key Alias'
    required: true
  appName:
    description: 'Displayed App Name'
    required: false
    default: 'ChallengeMe'
  versionNumber:
    description: 'APK version'
    required: false
    default: '1'
  versionName:
    description: 'APK version name'
    required: false
    default: '0.0.0'
  type:
    description: 'apk or appbundle'
    required: false
    default: 'apk'
runs:
  using: composite
  steps:
    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: ~/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pub-

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle', '**/gradle.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.6'

    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'

    - name: Get dependencies
      run: flutter pub get
      shell: bash

    - name: Decode Keystore
      run: echo "${{ inputs.keystore }}" | base64 --decode > android/app/key.jks
      shell: bash

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Build
      run: flutter build ${{ inputs.type }} --release --no-tree-shake-icons
      env:
        KEY_PASSWORD: ${{ inputs.keyPassword }}
        KEY_ALIAS: ${{ inputs.keyAlias }}
        CHALLENGEME_NAME: ${{ inputs.appName }}
        VERSION_NUMBER: ${{ inputs.versionNumber }}
        VERSION_NAME: ${{ inputs.versionName }}
      shell: bash
